apply plugin: 'com.android.application'
apply from: 'checkstyle.gradle'
apply from: 'cpd.gradle'
apply from: 'jacoco.gradle'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'
    defaultConfig {
        applicationId 'com.smlnskgmail.jaman.hashchecker'
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 85
        versionName '3.5.2'
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner 'com.smlnskgmail.jaman.hashchecker.runner.AndroidJacocoTestRunner'

        resConfigs 'en',
                'de',
                'el',
                'es',
                'fa',
                'fr',
                'hu',
                'it',
                'iw',
                'ko',
                'nl',
                'pl',
                'ru',
                'sv',
                'zh-rCN'
    }
    buildTypes {
        debug {
            versionNameSuffix '-dev'
            minifyEnabled false

            testCoverageEnabled = true
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
    sourceSets {
        main {
            resources.srcDirs = [
                    'src/main/resources',
                    'src/test'
            ]
        }
    }
    testOptions {
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def versionName = android.defaultConfig.versionName
            output.outputFileName = "hash-checker_${versionName}.apk"
        }
    }
}

tasks.whenTaskAdded { task ->
    def releaseFlavorName = 'release'
    def defaultBundleName = "app-${releaseFlavorName}.aab"
    if (task.name.startsWith('bundle')) {
        def flavor = task.name.substring('bundle'.length()).uncapitalize()
        if (flavor == releaseFlavorName) {
            def taskName = "rename${flavor.capitalize()}Bundle"
            tasks.create(taskName, Copy) {
                def path = "$flavor/"
                from(path)
                include defaultBundleName
                destinationDir file(path)

                def versionName = android.defaultConfig.versionName
                def outputBundleName = "hash-checker_${versionName}.aab"
                rename defaultBundleName, outputBundleName
            }
            task.finalizedBy(taskName)
        }
    }
    if (task.name.startsWith('rename')) {
        def taskName = "deleteDefaulReleaseBundle"
        tasks.create(taskName, Delete) {
            delete "$releaseFlavorName/$defaultBundleName"
        }
        task.finalizedBy(taskName)
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.preference:preference:1.1.1'

    implementation 'com.smlnskgmail.jaman:adaptiverecyclerview:1.1.0'

    // ORMLite
    implementation 'com.j256.ormlite:ormlite-core:5.1'
    implementation 'com.j256.ormlite:ormlite-android:5.1'

    // Unit tests
    testImplementation 'junit:junit:4.13'

    // Android tests
    androidTestImplementation 'androidx.annotation:annotation:1.1.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'

    // Screenshots
    androidTestImplementation 'tools.fastlane:screengrab:2.0.0'
}
